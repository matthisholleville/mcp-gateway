// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Source Code",
            "url": "https://github.com/matthisholleville/mcp-gateway"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/admin/attribute-to-roles": {
            "get": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "description": "Get all attribute to roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attribute to roles"
                ],
                "summary": "Get all attribute to roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.AttributeToRolesConfig"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "description": "Upsert a attribute to role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attribute to roles"
                ],
                "summary": "Upsert a attribute to role",
                "parameters": [
                    {
                        "description": "Attribute to role",
                        "name": "attributeToRole",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.AttributeToRolesConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.AttributeToRolesConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/attribute-to-roles/{attributeKey}/{attributeValue}": {
            "delete": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "description": "Delete a attribute to role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attribute to roles"
                ],
                "summary": "Delete a attribute to role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Attribute key",
                        "name": "attributeKey",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Attribute value",
                        "name": "attributeValue",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/proxies": {
            "get": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "description": "Get all proxies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxies"
                ],
                "summary": "Get all proxies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.ProxyConfig"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/proxies/{name}": {
            "get": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "description": "Get a proxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxies"
                ],
                "summary": "Get a proxy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proxy name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.ProxyConfig"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "description": "Upsert a proxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxies"
                ],
                "summary": "Upsert a proxy",
                "parameters": [
                    {
                        "description": "Proxy",
                        "name": "proxy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.ProxyConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.ProxyConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "description": "Delete a proxy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxies"
                ],
                "summary": "Delete a proxy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proxy name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/roles": {
            "get": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "description": "Get all roles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Get all roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/storage.RoleConfig"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "description": "Upsert a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Upsert a role",
                "parameters": [
                    {
                        "description": "Role",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/storage.RoleConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/storage.RoleConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/roles/{role}": {
            "delete": {
                "security": [
                    {
                        "Authentication": []
                    }
                ],
                "description": "Delete a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roles"
                ],
                "summary": "Delete a role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "storage.AttributeToRolesConfig": {
            "type": "object",
            "properties": {
                "attribute_key": {
                    "type": "string"
                },
                "attribute_value": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "storage.ObjectType": {
            "type": "string",
            "enum": [
                "tools",
                "*"
            ],
            "x-enum-varnames": [
                "ObjectTypeTools",
                "ObjectTypeAll"
            ]
        },
        "storage.PermissionConfig": {
            "type": "object",
            "properties": {
                "object_name": {
                    "type": "string"
                },
                "object_type": {
                    "$ref": "#/definitions/storage.ObjectType"
                },
                "proxy": {
                    "type": "string"
                }
            }
        },
        "storage.ProxyAuthType": {
            "type": "string",
            "enum": [
                "header",
                "oauth"
            ],
            "x-enum-varnames": [
                "ProxyAuthTypeHeader",
                "ProxyAuthTypeOAuth"
            ]
        },
        "storage.ProxyConfig": {
            "type": "object",
            "properties": {
                "authType": {
                    "$ref": "#/definitions/storage.ProxyAuthType"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.ProxyHeader"
                    }
                },
                "name": {
                    "type": "string"
                },
                "oauth": {
                    "$ref": "#/definitions/storage.ProxyOAuth"
                },
                "timeout": {
                    "$ref": "#/definitions/time.Duration"
                },
                "type": {
                    "$ref": "#/definitions/storage.ProxyType"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "storage.ProxyHeader": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "storage.ProxyOAuth": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "clientSecret": {
                    "type": "string"
                },
                "scopes": {
                    "type": "string"
                },
                "tokenEndpoint": {
                    "type": "string"
                }
            }
        },
        "storage.ProxyType": {
            "type": "string",
            "enum": [
                "streamable-http"
            ],
            "x-enum-varnames": [
                "ProxyTypeStreamableHTTP"
            ]
        },
        "storage.RoleConfig": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/storage.PermissionConfig"
                    }
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        }
    },
    "securityDefinitions": {
        "Authentication": {
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "MCP Gateway API",
	Description:      "This is the MCP Gateway API documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
