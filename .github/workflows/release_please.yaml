name: release

on:
  push:
    branches:
      - main
      - "[0-9]+.[0-9]+.x"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  issues: write
  pull-requests: write

defaults:
  run:
    shell: bash

jobs:
  release-please:
    permissions:
      contents: write # for google-github-actions/release-please-action to create release commit
      pull-requests: write # for google-github-actions/release-please-action to create release PR
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    # Release-please creates a PR that tracks all changes
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - uses: google-github-actions/release-please-action@e4dc86ba9405554aeba3c6bb2d169500e7d3b4ee # v4.1.1
        id: release
        with:
          token: ${{secrets.RELEASE_TOKEN}}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  goreleaser:
    if: needs.release-please.outputs.releases_created == 'true'
    permissions:
      contents: write
    needs:
      - release-please
    runs-on: ubuntu-latest
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: false
          dotnet: false
          haskell: false
          large-packages: true
          docker-images: true
          swap-storage: true
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5
        with:
          go-version: "1.23"
      - name: Download Syft
        uses: anchore/sbom-action/download-syft@55dc4ee22412511ee8c3142cbea40418e6cec693 # v0.17.8
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200 # v6
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

  build-container-dev:
    if: needs.release-please.outputs.releases_created != 'true'
    needs:
      - release-please
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    env:
      IMAGE_NAME: ghcr.io/matthisholleville/mcp-gateway-dev
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.RELEASE_TOKEN }}

      - name: Build & Push Web Docker Image
        uses: ./.github/actions/package-docker-image
        with:
          build_context_directory: .
          build_image_directory: ./Dockerfile
          container_target_platforms: linux/amd64,linux/arm64
          container_image_name: ${{ env.IMAGE_NAME }}
          container_image_tag_latest: true
          container_image_tag: dev-${{ github.sha }}
          container_image_push: true
          github_token: ${{ secrets.RELEASE_TOKEN }}

  build-container:
    if: needs.release-please.outputs.releases_created == 'true'
    needs:
      - release-please
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    env:
      IMAGE_NAME: ghcr.io/matthisholleville/mcp-gateway
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Web Docker Image
        uses: ./.github/actions/package-docker-image
        with:
          build_context_directory: .
          build_image_directory: ./Dockerfile
          container_target_platforms: linux/amd64,linux/arm64
          container_image_name: ${{ env.IMAGE_NAME }}
          container_image_tag_latest: true
          container_image_tag: ${{ needs.release-please.outputs.tag_name }}
          container_image_push: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate SBOM
        uses: anchore/sbom-action@55dc4ee22412511ee8c3142cbea40418e6cec693 # v0.17.8
        with:
          image: ${{ env.IMAGE_NAME }}
          artifact-name: sbom-mcp-gateway
          output-file: ./sbom-mcp-gateway.spdx.json

      - name: Attach SBOM to release
        uses: softprops/action-gh-release@e7a8f85e1c67a31e6ed99a94b41bd0b71bbee6b8 # v2
        with:
          tag_name: ${{ needs.release-please.outputs.tag_name }}
          files: ./sbom-mcp-gateway.spdx.json
